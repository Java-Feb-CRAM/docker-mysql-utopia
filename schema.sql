-- MySQL Script generated by MySQL Workbench
-- Thu Mar 18 07:31:47 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema default_schema
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `utopia` ;

-- -----------------------------------------------------
-- Schema default_schema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `utopia` ;
-- -----------------------------------------------------
-- Schema utopia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `utopia` ;

-- -----------------------------------------------------
-- Schema utopia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `utopia` DEFAULT CHARACTER SET utf8 ;
USE `utopia` ;

-- -----------------------------------------------------
-- Table `utopia`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`user_role` ;

CREATE TABLE IF NOT EXISTS `utopia`.`user_role` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`user` ;

CREATE TABLE IF NOT EXISTS `utopia`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `role_id` INT UNSIGNED NOT NULL,
  `given_name` VARCHAR(255) NOT NULL,
  `family_name` VARCHAR(255) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_user_role1_idx` (`role_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC) VISIBLE,
  CONSTRAINT `fk_user_user_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `utopia`.`user_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `default_schema`.`verification_token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`verification_token` ;

CREATE TABLE IF NOT EXISTS `utopia`.`verification_token` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `token` VARCHAR(64) NULL,
  `expiry_date` DATE NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_verification_user_id_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_verification_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `utopia`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `default_schema`.`password_reset_token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`password_reset_token` ;

CREATE TABLE IF NOT EXISTS `utopia`.`password_reset_token` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `token` VARCHAR(64) NULL,
  `expiry_date` DATE NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_reset_user_id_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_reset_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `utopia`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `utopia` ;

-- -----------------------------------------------------
-- Table `utopia`.`airport`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`airport` ;

CREATE TABLE IF NOT EXISTS `utopia`.`airport` (
  `iata_id` CHAR(3) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`iata_id`),
  UNIQUE INDEX `iata_id_UNIQUE` (`iata_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`route`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`route` ;

CREATE TABLE IF NOT EXISTS `utopia`.`route` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `origin_id` CHAR(3) NOT NULL,
  `destination_id` CHAR(3) NOT NULL,
  PRIMARY KEY (`id`, `origin_id`, `destination_id`),
  INDEX `fk_route_airport1_idx` (`origin_id` ASC) VISIBLE,
  INDEX `fk_route_airport2_idx` (`destination_id` ASC) VISIBLE,
  UNIQUE INDEX `unique_route` (`origin_id` ASC, `destination_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_route_airport1`
    FOREIGN KEY (`origin_id`)
    REFERENCES `utopia`.`airport` (`iata_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_route_airport2`
    FOREIGN KEY (`destination_id`)
    REFERENCES `utopia`.`airport` (`iata_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`airplane_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`airplane_type` ;

CREATE TABLE IF NOT EXISTS `utopia`.`airplane_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `max_capacity` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`airplane`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`airplane` ;

CREATE TABLE IF NOT EXISTS `utopia`.`airplane` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_airplane_airplane_model1_idx` (`type_id` ASC) VISIBLE,
  CONSTRAINT `fk_airplane_airplane_model1`
    FOREIGN KEY (`type_id`)
    REFERENCES `utopia`.`airplane_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`flight`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`flight` ;

CREATE TABLE IF NOT EXISTS `utopia`.`flight` (
  `id` INT UNSIGNED NOT NULL,
  `route_id` INT UNSIGNED NOT NULL,
  `airplane_id` INT UNSIGNED NOT NULL,
  `departure_time` DATETIME NOT NULL,
  `reserved_seats` INT UNSIGNED NOT NULL,
  `seat_price` FLOAT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_tbl_flight_tbl_route1_idx` (`route_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_flight_airplane1_idx` (`airplane_id` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_flight_tbl_route1`
    FOREIGN KEY (`route_id`)
    REFERENCES `utopia`.`route` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_flight_airplane1`
    FOREIGN KEY (`airplane_id`)
    REFERENCES `utopia`.`airplane` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`booking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`booking` ;

CREATE TABLE IF NOT EXISTS `utopia`.`booking` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `is_active` TINYINT NOT NULL DEFAULT 1,
  `confirmation_code` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`passenger`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`passenger` ;

CREATE TABLE IF NOT EXISTS `utopia`.`passenger` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `booking_id` INT UNSIGNED NOT NULL,
  `given_name` VARCHAR(255) NOT NULL,
  `family_name` VARCHAR(255) NOT NULL,
  `dob` DATE NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_traveler_booking1_idx` (`booking_id` ASC) VISIBLE,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  CONSTRAINT `fk_traveler_booking1`
    FOREIGN KEY (`booking_id`)
    REFERENCES `utopia`.`booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`flight_bookings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`flight_bookings` ;

CREATE TABLE IF NOT EXISTS `utopia`.`flight_bookings` (
  `flight_id` INT UNSIGNED NOT NULL,
  `booking_id` INT UNSIGNED NOT NULL,
  INDEX `fk_flight_bookings_booking` (`booking_id` ASC) VISIBLE,
  INDEX `fk_flight_bookings_flight` (`flight_id` ASC) VISIBLE,
  PRIMARY KEY (`booking_id`, `flight_id`),
  CONSTRAINT `fk_flight_bookings_flight`
    FOREIGN KEY (`flight_id`)
    REFERENCES `utopia`.`flight` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_flight_bookings_booking`
    FOREIGN KEY (`booking_id`)
    REFERENCES `utopia`.`booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`booking_payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`booking_payment` ;

CREATE TABLE IF NOT EXISTS `utopia`.`booking_payment` (
  `booking_id` INT UNSIGNED NOT NULL,
  `stripe_id` VARCHAR(255) NOT NULL,
  `refunded` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`booking_id`),
  INDEX `fk_booking_payment_booking1_idx` (`booking_id` ASC) VISIBLE,
  UNIQUE INDEX `booking_id_UNIQUE` (`booking_id` ASC) VISIBLE,
  CONSTRAINT `fk_booking_payment_booking1`
    FOREIGN KEY (`booking_id`)
    REFERENCES `utopia`.`booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`booking_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`booking_user` ;

CREATE TABLE IF NOT EXISTS `utopia`.`booking_user` (
  `booking_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`booking_id`),
  INDEX `fk_user_bookings_booking1_idx` (`booking_id` ASC) VISIBLE,
  INDEX `fk_user_bookings_user1_idx` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `booking_id_UNIQUE` (`booking_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_bookings_booking1`
    FOREIGN KEY (`booking_id`)
    REFERENCES `utopia`.`booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_bookings_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `utopia`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`booking_guest`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`booking_guest` ;

CREATE TABLE IF NOT EXISTS `utopia`.`booking_guest` (
  `booking_id` INT UNSIGNED NOT NULL,
  `contact_email` VARCHAR(255) NOT NULL,
  `contact_phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`booking_id`),
  UNIQUE INDEX `booking_id_UNIQUE` (`booking_id` ASC) VISIBLE,
  CONSTRAINT `fk_booking_guest_booking1`
    FOREIGN KEY (`booking_id`)
    REFERENCES `utopia`.`booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `utopia`.`booking_agent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`booking_agent` ;

CREATE TABLE IF NOT EXISTS `utopia`.`booking_agent` (
  `booking_id` INT UNSIGNED NOT NULL,
  `agent_id` INT UNSIGNED NOT NULL,
  INDEX `fk_booking_booker_user1_idx` (`agent_id` ASC) VISIBLE,
  PRIMARY KEY (`booking_id`),
  UNIQUE INDEX `booking_id_UNIQUE` (`booking_id` ASC) VISIBLE,
  CONSTRAINT `fk_booking_booker_user1`
    FOREIGN KEY (`agent_id`)
    REFERENCES `utopia`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_booking_booker_booking1`
    FOREIGN KEY (`booking_id`)
    REFERENCES `utopia`.`booking` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `utopia` ;

-- -----------------------------------------------------
-- Placeholder table for view `utopia`.`flight_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia`.`flight_status` (`id` INT, `route_id` INT, `airplane_id` INT, `departure_time` INT, `reserved_seats` INT, `seat_price` INT, `max_capacity` INT, `passenger_count` INT, `available_seats` INT);

-- -----------------------------------------------------
-- Placeholder table for view `utopia`.`flight_passengers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia`.`flight_passengers` (`flight_id` INT, `booking_id` INT, `passenger_id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `utopia`.`guest_booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia`.`guest_booking` (`id` INT, `is_active` INT, `confirmation_code` INT, `contact_email` INT, `contact_phone` INT, `agent_id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `utopia`.`user_booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `utopia`.`user_booking` (`id` INT, `is_active` INT, `confirmation_code` INT, `user_id` INT, `agent_id` INT);

-- -----------------------------------------------------
-- View `utopia`.`flight_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`flight_status`;
DROP VIEW IF EXISTS `utopia`.`flight_status` ;
USE `utopia`;
CREATE  OR REPLACE VIEW `flight_status` AS SELECT
	flight.*,
    airplane_capacity.max_capacity,
    flight_passenger_count.passenger_count,
    (airplane_capacity.max_capacity - flight.reserved_seats - flight_passenger_count.passenger_count) as available_seats
    FROM
	flight
    INNER JOIN
    (SELECT
		airplane.id,
        airplane_type.max_capacity
        FROM
        airplane
        INNER JOIN
        airplane_type
        ON airplane.type_id=airplane_type.id
	) AS airplane_capacity
    ON flight.airplane_id=airplane_capacity.id
    INNER JOIN
	(SELECT
		flight_id,
		COUNT(*) AS passenger_count
		FROM
		flight_passengers
		GROUP BY flight_id
	) AS flight_passenger_count
	ON flight.id=flight_passenger_count.flight_id;

-- -----------------------------------------------------
-- View `utopia`.`flight_passengers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`flight_passengers`;
DROP VIEW IF EXISTS `utopia`.`flight_passengers` ;
USE `utopia`;
CREATE  OR REPLACE VIEW `flight_passengers` AS SELECT
	flight_bookings.*,
    passenger.id as passenger_id
    FROM
    flight_bookings
    INNER JOIN
    passenger
    ON flight_bookings.booking_id=passenger.booking_id
    INNER JOIN
    booking
    ON flight_bookings.booking_id=booking.id
    WHERE booking.is_active=true;

-- -----------------------------------------------------
-- View `utopia`.`guest_booking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`guest_booking`;
DROP VIEW IF EXISTS `utopia`.`guest_booking` ;
USE `utopia`;
CREATE  OR REPLACE VIEW `guest_booking` AS SELECT
	booking.id,
    booking.is_active,
    booking.confirmation_code,
    booking_guest.contact_email,
    booking_guest.contact_phone,
    booking_agent.agent_id
    FROM
    booking
    INNER JOIN
    booking_guest
    ON booking.id=booking_guest.booking_id
	LEFT JOIN
	booking_agent
	ON booking.id=booking_agent.booking_id;

-- -----------------------------------------------------
-- View `utopia`.`user_booking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `utopia`.`user_booking`;
DROP VIEW IF EXISTS `utopia`.`user_booking` ;
USE `utopia`;
CREATE  OR REPLACE VIEW `user_booking` AS SELECT
	booking.id,
    booking.is_active,
    booking.confirmation_code,
    booking_user.user_id,
    booking_agent.agent_id
    FROM
    booking
    INNER JOIN
	booking_user
	ON booking.id=booking_user.booking_id
	LEFT JOIN
	booking_agent
	ON booking.id=booking_agent.booking_id;
USE `utopia`;

DELIMITER $$

USE `utopia`$$
DROP TRIGGER IF EXISTS `utopia`.`route_BEFORE_INSERT` $$
USE `utopia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `utopia`.`route_BEFORE_INSERT` BEFORE INSERT ON `route` FOR EACH ROW
BEGIN
	IF (NEW.origin_id = NEW.destination_id) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'origin cannot be same as destination';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `utopia`.`airport`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('JFK', 'New York');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('PDX', 'Portland');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAA', 'Anaa');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAB', 'Arrabury');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAC', 'El Arish');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAD', 'Adado');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAE', 'Annaba');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAF', 'Apalachicola');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAG', 'Arapoti');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAH', 'Aachen');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('AAI', 'Arraias');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('BAA', 'Bialla');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('BAB', 'Marysville');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('CAA', 'Catacamas');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('CAB', 'Cabinda');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('DAA', 'Fort Belvoir');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('DAB', 'Daytona Beach');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('EAA', 'Eagle');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('EAB', 'Abbs');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('FAA', 'Faranah');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('FAB', 'Farnborough');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('GAA', 'Guamal');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('GAB', 'Gabbs');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('HAA', 'Hasvik');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('HAB', 'Hamilton');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('IAA', 'Igarka');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('IAB', 'Wichita');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('JAA', 'Jalalabad');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('JAB', 'Jabiru');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('KAA', 'Kasama');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('KAB', 'Kariba');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('LAA', 'Lamar');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('LAB', 'Lab Lab');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('MAA', 'Chennai');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('MAB', 'Marabá');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('NAA', 'Narrabri');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('NAC', 'Narcoorte');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('OAA', 'Gardez');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('OAG', 'Orange');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('PAA', 'Hpa-An');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('PAB', 'Bilaspur');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('QAQ', 'L\'Aquila');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('QBC', 'Bella Coola');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('RAA', 'Rakanda');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('RAB', 'Rabaul');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('SAA', 'Saratoga');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('SAB', 'Saba');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('TAA', 'Tarapaina');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('TAB', 'Tobago');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('UAB', 'Adana');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('UAC', 'San Luis Río Colorado');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('VAA', 'Vaasa');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('VAB', 'Yavarate');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('WAA', 'Wales');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('WAC', 'Wacca');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('XAI', 'Xinyang');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('XAL', 'Álamos');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('YAA', 'Anahim Lake');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('YAB', 'Arctic Bay');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('ZAA', 'Alice Arm');
INSERT INTO `utopia`.`airport` (`iata_id`, `city`) VALUES ('ZAC', 'York Landing');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`route`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`route` (`id`, `origin_id`, `destination_id`) VALUES (1, 'JFK', 'PDX');
INSERT INTO `utopia`.`route` (`id`, `origin_id`, `destination_id`) VALUES (2, 'PDX', 'JFK');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`airplane_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`airplane_type` (`id`, `max_capacity`) VALUES (1, 150);
INSERT INTO `utopia`.`airplane_type` (`id`, `max_capacity`) VALUES (2, 300);

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`airplane`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`airplane` (`id`, `type_id`) VALUES (1, 1);
INSERT INTO `utopia`.`airplane` (`id`, `type_id`) VALUES (2, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`flight`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`flight` (`id`, `route_id`, `airplane_id`, `departure_time`, `reserved_seats`, `seat_price`) VALUES (1, 1, 1, '2021-01-28 12:00:00', 30, 100.00);
INSERT INTO `utopia`.`flight` (`id`, `route_id`, `airplane_id`, `departure_time`, `reserved_seats`, `seat_price`) VALUES (2, 2, 1, '2021-01-28 12:00:00', 30, 100.00);

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`booking`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`booking` (`id`, `is_active`, `confirmation_code`) VALUES (1, 1, '123456');
INSERT INTO `utopia`.`booking` (`id`, `is_active`, `confirmation_code`) VALUES (2, 1, '234567');
INSERT INTO `utopia`.`booking` (`id`, `is_active`, `confirmation_code`) VALUES (3, 1, '345678');
INSERT INTO `utopia`.`booking` (`id`, `is_active`, `confirmation_code`) VALUES (4, 0, '456789');
INSERT INTO `utopia`.`booking` (`id`, `is_active`, `confirmation_code`) VALUES (5, 1, '567890');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`user_role`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`user_role` (`id`, `name`) VALUES (1, 'ADMIN');
INSERT INTO `utopia`.`user_role` (`id`, `name`) VALUES (2, 'USER');
INSERT INTO `utopia`.`user_role` (`id`, `name`) VALUES (3, 'AGENT');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (1, 1, 'given1', 'family1', 'user1', 'user1@test.test', '$2b$10$canjw1GZw63fBLUCpgDh2eFLxlseC6Rk9tBgbFPpla4SCS7IcaMu6', '12223334444');
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (2, 2, 'given2', 'family2', 'user2', 'user2@test.test', '$2b$10$ZjRvQ7GnNHEaBRpNZxAnRuHhUqcJ4Rphq2wltOD9N2hXKddYJBoIK', '23334445555');
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (3, 2, 'given3', 'family3', 'user3', 'user3@test.test', '$2b$10$pwEp.EGA9NdOb1Q7pjq2qe3C55uFGondZmmSEEU9G3CaLILZRNDOC', '34445556666');
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (4, 2, 'given4', 'family4', 'user4', 'user4@test.test', '$2b$10$pKOhkeAlum7VaB9/4kesbONjiYMdM/8igLTLlRgTJ/joFGN0imptC', '45556667777');
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (5, 3, 'given5', 'family5', 'user5', 'user5@test.test', '$2b$10$hmZBExxU3.H2m.kVyf21WOm7YvA6W8XemHa7/MdEtoR09ZtqdqitK', '56667778888');
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (6, 2, 'given6', 'family6', 'user6', 'user6@test.test', '$2a$11$OFJttcoJOuobBnH67CVji.A//xzw108cHRfUeDmLvQPyk/kz70ULy', '56660989888');
INSERT INTO `utopia`.`user` (`id`, `role_id`, `given_name`, `family_name`, `username`, `email`, `password`, `phone`) VALUES (7, 1, 'given7', 'family7', 'user7', 'user7@test.test', '$2a$11$OFJttcoJOuobBnH67CVji.A//xzw108cHRfUeDmLvQPyk/kz70ULy', '56760989888');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`passenger`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (1, 1, 'given1', 'family1', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (2, 1, 'given2', 'family2', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (3, 2, 'given3', 'family3', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (4, 3, 'given4', 'family4', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (5, 3, 'given5', 'family5', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (6, 5, 'given6', 'family6', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (7, 5, 'given7', 'family7', '2000/01/01', 'M', 'null island');
INSERT INTO `utopia`.`passenger` (`id`, `booking_id`, `given_name`, `family_name`, `dob`, `gender`, `address`) VALUES (8, 5, 'given8', 'family8', '2000/01/01', 'M', 'null island');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`flight_bookings`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`flight_bookings` (`flight_id`, `booking_id`) VALUES (1, 1);
INSERT INTO `utopia`.`flight_bookings` (`flight_id`, `booking_id`) VALUES (1, 2);
INSERT INTO `utopia`.`flight_bookings` (`flight_id`, `booking_id`) VALUES (2, 3);
INSERT INTO `utopia`.`flight_bookings` (`flight_id`, `booking_id`) VALUES (2, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`booking_user`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`booking_user` (`booking_id`, `user_id`) VALUES (1, 2);
INSERT INTO `utopia`.`booking_user` (`booking_id`, `user_id`) VALUES (2, 3);
INSERT INTO `utopia`.`booking_user` (`booking_id`, `user_id`) VALUES (3, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`booking_guest`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`booking_guest` (`booking_id`, `contact_email`, `contact_phone`) VALUES (5, 'guest1@test.test', '12223334444');

COMMIT;


-- -----------------------------------------------------
-- Data for table `utopia`.`booking_agent`
-- -----------------------------------------------------
START TRANSACTION;
USE `utopia`;
INSERT INTO `utopia`.`booking_agent` (`booking_id`, `agent_id`) VALUES (2, 5);

COMMIT;
